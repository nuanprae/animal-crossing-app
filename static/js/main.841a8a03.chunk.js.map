{"version":3,"sources":["assets/pause-button.svg","components/PauseButton/PauseButton.js","assets/play-button.svg","components/PlayButton/PlayButton.js","hooks/useFetchAudio.js","hooks/useFetchWeatherData.js","utils.js","hooks/useGetDateAndTime.js","components/MusicPlayer/MusicPlayer.js","components/Header/Header.js","components/TextBlock/TextBlock.js","components/ItemCard/ItemCard.js","hooks/useQueryFish.js","hooks/useQuerySeaCreatures.js","hooks/useQueryBugs.js","hooks/useQueryAllCreatures.js","pages/HomePage/HomePage.jsx","components/Nav/Nav.js","components/DropdownButton/DropdownButton.js","components/FilterMenu/FilterMenu.js","assets/money-bag-icon.png","components/ItemCardsGrid/ItemCardsGrid.js","hooks/useSortByPrice.js","hooks/useSortByType.js","hooks/useSelectLanguage.js","pages/FishPage/FishPage.jsx","hooks/useSortBySpeedType.js","pages/SeaCreaturesPage/SeaCreaturesPage.jsx","pages/BugsPage/BugsPage.jsx","components/App/App.js","reportWebVitals.js","index.js"],"names":["PauseButton","props","className","onClick","src","pauseButtonSvg","alt","PlayButton","playButtonSvg","useFetchAudio","useState","audioList","setAudioList","useEffect","a","axios","get","apiCallResponse","Object","values","data","console","log","fetchData","useFetchWeatherData","city","setCity","weatherIcon","setWeatherIcon","weatherID","setWeatherID","weatherDescription","setWeatherDescription","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","process","weatherData","weather","id","name","icon","description","error","fetchWeatherData","getTime","Date","toLocaleTimeString","hour","minute","hour12","getDailyAcnhResults","results","monthNumber","getMonth","filter","obj","availability","includes","sortDescendingOrder","array","type","sort","b","sortAscendingOrder","findTotalCreatures","length","useGetDateAndTime","dayNumber","toLocaleDateString","day","monthName","toLocaleString","month","timeAtLoad","utils","currentTime","setCurrentTime","intervalID","setInterval","clearInterval","MusicPlayer","audio","setAudio","slice","hourlyID","setHourlyID","isPlaying","setIsPlaying","minutes","getMinutes","currentAudio","audioUrl","Audio","play","loop","pause","toggle","Header","location","image","date","time","TextBlock","text","ItemCard","caption1","moneyIcon","caption2","useQueryFish","useQuery","manipulatedData","completeData","dailyData","refetchOnMount","refetchOnWindowFocus","isError","isLoading","useQuerySeaCreatures","useQueryData","useQueryAllCreatures","fishData","seaCreaturesData","bugsData","useQueryBugs","HomePage","fishIcon","setFishIcon","numberOfFishAvailable","setNumberOfFishAvailable","totalFish","setTotalFish","seaCreatureIcon","setSeaCreatureIcon","numberOfSeaCreaturesAvailable","setNumberOfSeaCreaturesAvailable","totalSeaCreatures","setTotalSeaCreatures","bugIcon","setBugIcon","numberOfBugsAvailable","setNumberOfBugsAvailable","totalBugs","setTotalBugs","icon_uri","Nav","pathname","useLocation","to","DropdownButton","listOptions","options","map","option","label","onChange","FilterMenu","sortByPrice","category","sortByType","types","selectLanguage","ItemCardsGrid","items","item","language","price","moneyBagIcon","useSortByPrice","state","setState","setSortByPrice","handleSortByPrice","event","target","value","useSortByType","handleSortByType","filtered","useSelectLanguage","handleSelectLanguage","FishPage","setItems","selectedLanguage","setSelectedLanguage","setTypes","locationTypes","Set","useSortBySpeedType","handleSortBySpeedType","speed","SeaCreaturesPage","speedTypes","BugsPage","rarityTypes","rarity","queryClient","QueryClient","App","QueryClientProvider","client","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2hBAAe,MAA0B,yC,eCkB1BA,EAZK,SAACC,GACnB,OACE,wBAAQC,UAAU,eAAeC,QAASF,EAAME,QAAhD,SACE,qBAAKC,IAAKC,EAAgBC,IAAI,oBCTrB,MAA0B,wCCkB1BC,G,MAZI,SAACN,GAClB,OACE,wBAAQC,UAAU,cAAcC,QAASF,EAAME,QAA/C,SACE,qBAAKC,IAAKI,EAAeF,IAAI,oB,iDCcpBG,EApBO,WAAO,IAAD,EACQC,mBAAS,MADjB,mBACnBC,EADmB,KACRC,EADQ,KAe1B,OAZAC,qBAAU,YACO,uCAAG,4BAAAC,EAAA,+EAEgBC,IAAMC,IAAI,2CAF1B,OAERC,EAFQ,OAGdL,EAAaM,OAAOC,OAAOF,EAAgBG,OAH7B,gDAKdC,QAAQC,IAAR,MALc,yDAAH,qDAQfC,KACC,IAEI,CACLZ,cCeWa,EA/Ba,WAAO,IAAD,EACRd,mBAAS,IADD,mBACzBe,EADyB,KACnBC,EADmB,OAEMhB,mBAAS,IAFf,mBAEzBiB,EAFyB,KAEZC,EAFY,OAGElB,mBAAS,GAHX,mBAGzBmB,EAHyB,KAGdC,EAHc,OAIoBpB,mBAAS,IAJ7B,mBAIzBqB,EAJyB,KAILC,EAJK,KA4BhC,OAtBAnB,qBAAU,YACiB,WACvB,IACEoB,UAAUC,YAAYC,mBAAtB,uCAAyC,WAAOC,GAAP,qBAAAtB,EAAA,6DACjCuB,EAAWD,EAASE,OAAOD,SAC3BE,EAAYH,EAASE,OAAOC,UAFK,SAGTxB,IAAMC,IAAN,8DAC2BqB,EAD3B,gBAC2CE,EAD3C,kBAC8DC,qCAJrD,OAGjCvB,EAHiC,OAMjCwB,EAAcxB,EAAgBG,KACpCU,EAAaW,EAAYC,QAAQ,GAAGC,IACpCjB,EAAQe,EAAYG,MACpBhB,EAAe,qCAAD,OAAsCa,EAAYC,QAAQ,GAAGG,KAA7D,YACdb,EAAsBS,EAAYC,QAAQ,GAAGI,aAVN,4CAAzC,uDAYA,MAAOC,GACP1B,QAAQ0B,MAAMA,IAGlBC,KACC,IAEI,CAAEvB,OAAME,cAAaE,YAAWE,uB,QChB5BkB,EAAU,WACrB,OAAO,IAAIC,MAAOC,mBAAmB,GAAI,CACvCC,KAAM,UACNC,OAAQ,UACRC,QAAQ,KAICC,EAAsB,SAACnC,GAClC,IAAMoC,EAAUtC,OAAOC,OAAOC,GACxBqC,GAdO,IAAIP,MACLQ,WAAa,EAczB,cAAOF,QAAP,IAAOA,OAAP,EAAOA,EAASG,QAAO,SAACC,GAAD,OAASA,EAAIC,aAAa,wBAAwBC,SAASL,OAGvEM,EAAsB,SAACC,EAAOC,GACzC,GAAID,EACF,OAAO,YAAIA,GAAOE,MAAK,SAACpD,EAAGqD,GAAJ,OAAUA,EAAEF,GAAQnD,EAAEmD,OAIpCG,EAAqB,SAACJ,EAAOC,GACxC,GAAID,EACF,OAAO,YAAIA,GAAOE,MAAK,SAACpD,EAAGqD,GAAJ,OAAUrD,EAAEmD,GAAQE,EAAEF,OAIpCI,EAAqB,SAACjD,GACjC,GAAIA,EACF,OAAOF,OAAOC,OAAOC,GAAMkD,QCrBhBC,EAlBW,WACxB,IAAMC,GDJO,IAAItB,MACLuB,mBAAmB,UAAW,CAAEC,IAAK,YCI3CC,GDAO,IAAIzB,MACL0B,eAAe,UAAW,CAAEC,MAAO,SCAzCC,EAAaC,IAHW,EAIQrE,mBAASoE,GAJjB,mBAIvBE,EAJuB,KAIVC,EAJU,KAe9B,OATApE,qBAAU,WACR,IAAMqE,EAAaC,aAAY,WAC7BF,EAAeF,OACd,KACH,OAAO,WACLK,cAAcF,MAEf,IAEI,CAAEV,YAAWG,YAAWK,gBC2ElBK,EAnFK,WAAO,IACjB1E,EAAcF,IAAdE,UACAqE,EAAgBT,IAAhBS,YACAnD,EAAcL,IAAdK,UAHgB,EAKEnB,mBAAS,MALX,mBAKjB4E,EALiB,KAKVC,EALU,OAMQ7E,mBAASsE,EAAYQ,MAAM,EAAG,IANtC,mBAMjBC,EANiB,KAMPC,EANO,OAOUhF,oBAAS,GAPnB,mBAOjBiF,EAPiB,KAONC,EAPM,KAWlBC,GADO,IAAI3C,MACI4C,aACrBjF,qBAAU,WACQ,IAAZgF,GACFH,EAAYV,EAAYQ,MAAM,EAAG,MAGlC,CAACK,IAWJhF,qBAAU,WACR,GAAIgB,GAAa,KAAOA,GAAa,IAAK,CACxC,IAAMkE,EAAY,OAAGpF,QAAH,IAAGA,OAAH,EAAGA,EAAWgD,QAC9B,SAACC,GAAD,OAASA,EAAI,eAAJ,qBAAmC6B,EAAnC,aAEX,GAAIM,EAAc,CAChB,IAAMC,EAAWD,EAAa,GAAb,UACjBR,EAAS,IAAIU,MAAMD,UAEhB,GAAInE,GAAa,KAAOA,GAAa,IAAK,CAC/C,IAAMkE,EAAY,OAAGpF,QAAH,IAAGA,OAAH,EAAGA,EAAWgD,QAC9B,SAACC,GAAD,OAASA,EAAI,eAAJ,qBAAmC6B,EAAnC,aAEX,GAAIM,EAAc,CAChB,IAAMC,EAAWD,EAAa,GAAb,UACjBR,EAAS,IAAIU,MAAMD,UAEhB,GAAInE,GAAa,KAAOA,GAAa,IAAK,CAC/C,IAAMkE,EAAY,OAAGpF,QAAH,IAAGA,OAAH,EAAGA,EAAWgD,QAC9B,SAACC,GAAD,OAASA,EAAI,eAAJ,qBAAmC6B,EAAnC,aAEX,GAAIM,EAAc,CAChB,IAAMC,EAAWD,EAAa,GAAb,UACjBR,EAAS,IAAIU,MAAMD,QAGtB,CAACrF,EAAW8E,EAAU5D,IAEzBhB,qBAAU,WAOR,OANI8E,GAAaL,GACV,OAALA,QAAK,IAALA,KAAOY,OACPZ,EAAMa,MAAO,GACHR,GACL,OAALL,QAAK,IAALA,KAAOc,QAEF,WACA,OAALd,QAAK,IAALA,KAAOc,WAER,CAACT,EAAWL,IAEf,IAAMe,EAAS,WACTV,EACFC,GAAa,GACHD,GACVC,GAAa,IAIjB,OACE,yBAAS1F,UAAU,eAAnB,SACGyF,EAAY,cAAC,EAAD,CAAaxF,QAASkG,IAAa,cAAC,EAAD,CAAYlG,QAASkG,OC5D5DC,G,MAvBA,SAACrG,GACd,OACE,yBAAQC,UAAS,iBAAYD,EAAMC,WAAnC,UACE,oBAAIA,UAAU,cAAd,0CACA,0BAASA,UAAU,aAAnB,UACE,6BAAKD,EAAMsG,WACX,qBAAKrG,UAAU,eAAeE,IAAKH,EAAMuG,MAAOlG,IAAKL,EAAMK,MAF7D,IAEqE,6BAAKL,EAAMwG,OAC9E,6BAAKxG,EAAMyG,OACX,cAAC,EAAD,YCDOC,G,MATG,SAAC1G,GACjB,OAAO,oBAAIC,UAAS,qBAAgBD,EAAMC,WAAnC,SAAiDD,EAAM2G,SCqBjDC,G,MAtBE,SAAC5G,GAChB,OACE,yBAAQC,UAAS,oBAAeD,EAAMC,WAAtC,UACE,qBAAKA,UAAU,kBAAkBE,IAAKH,EAAMuG,MAAOlG,IAAKL,EAAMK,MAC9D,4BAAYJ,UAAU,qBAAtB,SAA4CD,EAAM6G,WAClD,6BAAY5G,UAAU,qBAAtB,UACGD,EAAM8G,UACN9G,EAAM+G,iB,wBCiBAC,EAvBM,WAAO,IAAD,EACYC,YACnC,OAD2C,sBAE3C,8BAAApG,EAAA,sEACgCC,IAAMC,IAAI,gCAD1C,cACQC,EADR,OAEQkG,EAFR,2BAGOlG,GAHP,IAIIG,KAAM,CACJgG,aAAcnG,EAAgBG,KAC9BiG,UAAW9D,EAAoBtC,EAAgBG,SANrD,kBASS+F,GATT,2CAWA,CAAEG,gBAAgB,EAAOC,sBAAsB,IAbzCnG,EADiB,EACjBA,KAAMoG,EADW,EACXA,QAASC,EADE,EACFA,UAevB,MAAO,CACLrG,KAAI,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAMA,KACZoG,QAASA,EACTC,UAAWA,ICIAC,EAvBc,WAAO,IAAD,EACIR,YACnC,gBAD2C,sBAE3C,8BAAApG,EAAA,sEACgCC,IAAMC,IAAI,+BAD1C,cACQC,EADR,OAEQkG,EAFR,2BAGOlG,GAHP,IAIIG,KAAM,CACJgG,aAAcnG,EAAgBG,KAC9BiG,UAAW9D,EAAoBtC,EAAgBG,SANrD,kBASS+F,GATT,2CAWA,CAAEG,gBAAgB,EAAOC,sBAAsB,IAbzCnG,EADyB,EACzBA,KAAMoG,EADmB,EACnBA,QAASC,EADU,EACVA,UAevB,MAAO,CACLrG,KAAI,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAMA,KACZoG,QAASA,EACTC,UAAWA,ICIAE,EAvBM,WAAO,IAAD,EACYT,YACnC,OAD2C,sBAE3C,8BAAApG,EAAA,sEACgCC,IAAMC,IAAI,gCAD1C,cACQC,EADR,OAEQkG,EAFR,2BAGOlG,GAHP,IAIIG,KAAM,CACJgG,aAAcnG,EAAgBG,KAC9BiG,UAAW9D,EAAoBtC,EAAgBG,SANrD,kBASS+F,GATT,2CAWA,CAAEG,gBAAgB,EAAOC,sBAAsB,IAbzCnG,EADiB,EACjBA,KAAMoG,EADW,EACXA,QAASC,EADE,EACFA,UAevB,MAAO,CACLrG,KAAI,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAMA,KACZoG,UACAC,cCRWG,EAZc,WAC3B,IAAMC,EAAWZ,IACXa,EAAmBJ,IAGzB,MAAO,CACLG,WACAE,SAJeC,IAKfF,qBCoEWG,EArEE,SAAChI,GAAW,IAAD,EACMS,mBAAS,IADf,mBACnBwH,EADmB,KACTC,EADS,OAEgCzH,mBAAS,GAFzC,mBAEnB0H,EAFmB,KAEIC,EAFJ,OAGQ3H,mBAAS,GAHjB,mBAGnB4H,EAHmB,KAGRC,EAHQ,OAKoB7H,mBAAS,IAL7B,mBAKnB8H,EALmB,KAKFC,EALE,OAMgD/H,mBAAS,GANzD,mBAMnBgI,EANmB,KAMYC,EANZ,OAOwBjI,mBAAS,GAPjC,mBAOnBkI,EAPmB,KAOAC,EAPA,OASInI,mBAAS,IATb,mBASnBoI,EATmB,KASVC,EATU,OAUgCrI,mBAAS,GAVzC,mBAUnBsI,EAVmB,KAUIC,EAVJ,OAWQvI,mBAAS,GAXjB,mBAWnBwI,EAXmB,KAWRC,EAXQ,OAauBvB,IAAzCC,EAbkB,EAalBA,SAAUC,EAbQ,EAaRA,iBAAkBC,EAbV,EAaUA,SAgBpC,OAdAlH,qBAAU,WAAO,IAAD,kBACdsH,EAAW,UAACN,EAASzG,YAAV,aAAC,EAAeiG,UAAU,GAAG+B,UACxCf,EAAwB,UAACR,EAASzG,YAAV,aAAC,EAAeiG,UAAU/C,QAClDiE,EAAalE,EAAkB,UAACwD,EAASzG,YAAV,aAAC,EAAegG,eAE/CqB,EAAkB,UAACX,EAAiB1G,YAAlB,aAAC,EAAuBiG,UAAU,GAAG+B,UACvDT,EAAgC,UAACb,EAAiB1G,YAAlB,aAAC,EAAuBiG,UAAU/C,QAClEuE,EAAqBxE,EAAkB,UAACyD,EAAiB1G,YAAlB,aAAC,EAAuBgG,eAE/D2B,EAAU,UAAChB,EAAS3G,YAAV,aAAC,EAAeiG,UAAU,GAAG+B,UACvCH,EAAwB,UAAClB,EAAS3G,YAAV,aAAC,EAAeiG,UAAU/C,QAClD6E,EAAa9E,EAAkB,UAAC0D,EAAS3G,YAAV,aAAC,EAAegG,iBAC9C,CAACS,EAAUC,EAAkBC,IAE5BF,EAASJ,WAAaK,EAAiBL,WAAaM,EAASN,UAE7D,sBAAMvH,UAAS,oBAAeD,EAAMC,WAApC,SACE,cAAC,EAAD,CAAWA,UAAW,aAAc0G,KAAM,iBAK5CiB,EAASL,SAAWM,EAAiBN,SAAWO,EAASP,QAEzD,sBAAMtH,UAAS,oBAAeD,EAAMC,WAApC,SACE,cAAC,EAAD,CAAWA,UAAW,aAAc0G,KAAM,mCAM9C,uBAAM1G,UAAS,oBAAeD,EAAMC,WAApC,UACE,cAAC,EAAD,CAAWA,UAAW,aAAc0G,KAAM,oBAC1C,0BAAS1G,UAAW,aAApB,UACE,cAAC,EAAD,CACE4G,SAAU,OACVE,SAAQ,UAAKoB,EAAL,mBAAqCE,GAC7C9B,MAAO0B,IAET,cAAC,EAAD,CACEpB,SAAU,gBACVE,SAAQ,UAAK0B,EAAL,mBAA6CE,GACrDpC,MAAOgC,IAET,cAAC,EAAD,CACE1B,SAAU,OACVE,SAAQ,UAAKgC,EAAL,mBAAqCE,GAC7C1C,MAAOsC,WC1CFO,G,MA1BH,SAACpJ,GACX,IACMqJ,EADWC,cACSD,SAE1B,OACE,sBAAKpJ,UAAS,cAASD,EAAMC,WAA7B,UACE,cAAC,IAAD,CAAMsJ,GAAG,IAAItJ,UAAS,eAAuB,MAAboJ,GAAoB,UAApD,kBAGA,cAAC,IAAD,CAAME,GAAG,QAAQtJ,UAAS,eAAuB,UAAboJ,GAAwB,UAA5D,kBAGA,cAAC,IAAD,CAAME,GAAG,iBAAiBtJ,UAAS,eAAuB,mBAAboJ,GAAiC,UAA9E,2BAGA,cAAC,IAAD,CAAME,GAAG,QAAQtJ,UAAS,eAAuB,UAAboJ,GAAwB,UAA5D,uBCKSG,G,MArBQ,SAACxJ,GACtB,IACMyJ,EADUzJ,EAAM0J,QACMC,KAAI,SAACC,GAAD,OAAY,iCAAsBA,GAATA,MAEzD,OACE,0BAAS3J,UAAS,oBAAeD,EAAMC,WAAvC,UACE,kCAAQD,EAAM6J,MAAd,QACA,wBAAQlH,KAAM3C,EAAM6J,MAAOnH,GAAI1C,EAAM6J,MAAOC,SAAU9J,EAAM8J,SAA5D,SACGL,SCkBMM,G,MAzBI,SAAC/J,GAClB,OACE,0BAASC,UAAU,cAAnB,UACE,cAAC,EAAD,CACE4J,MAAO,UACPC,SAAU9J,EAAMgK,YAChBN,QAAS,CAAC,eAAgB,mBAE5B,cAAC,EAAD,CAAgBG,MAAO7J,EAAMiK,SAAUH,SAAU9J,EAAMkK,WAAYR,QAAS1J,EAAMmK,QAClF,cAAC,EAAD,CACEN,MAAO,YACPC,SAAU9J,EAAMoK,eAChBV,QAAS,CAAC,UAAW,mBCjBd,MAA0B,2CC8B1BW,G,MAvBO,SAACrK,GAAW,IAAD,EAC/B,OACE,yBAASC,UAAU,kBAAnB,mBACGD,EAAMsK,aADT,aACG,EAAaX,KAAI,SAACY,GACjB,OACE,cAAC,EAAD,CAEEhE,MAAOgE,EAAKpB,SACZ9I,IAAKkK,EAAK5H,KAAL,UAAa3C,EAAMwK,WACxB3D,SAAU0D,EAAK5H,KAAL,UAAa3C,EAAMwK,WAC7BzD,SAAUwD,EAAKE,MACf3D,UAAW,qBAAK7G,UAAU,iBAAiBE,IAAKuK,EAAcrK,IAAK,eAL9DkK,EAAK,qBCOPI,G,MAhBQ,SAACC,EAAOC,GAAc,IAAD,EACJpK,mBAAS,gBADL,mBACnCuJ,EADmC,KACtBc,EADsB,KAa1C,MAAO,CAAEC,kBAViB,SAACC,GACE,kBAAvBA,EAAMC,OAAOC,OACfL,EAAS/G,EAAoB8G,EAAO,UACpCE,EAAeE,EAAMC,OAAOC,QACI,iBAAvBF,EAAMC,OAAOC,QACtBL,EAAS1G,EAAmByG,EAAO,UACnCE,EAAeE,EAAMC,OAAOC,SAIJlB,iBCUfmB,EAzBO,SAACP,EAAOC,EAAUb,EAAahG,GAsBnD,MAAO,CAAEoH,iBArBgB,SAACJ,GACG,QAAvBA,EAAMC,OAAOC,MACfL,GAAS,WACP,MAAoB,kBAAhBb,EACKlG,EAAoB8G,EAAO,SACT,iBAAhBZ,EACF7F,EAAmByG,EAAO,cAD5B,KAKTC,GAAS,WACP,IAAMQ,EAAQ,OAAGT,QAAH,IAAGA,OAAH,EAAGA,EAAOlH,QAAO,SAACC,GAAD,OAASA,EAAIC,aAAaI,KAAUgH,EAAMC,OAAOC,SAChF,MAAoB,kBAAhBlB,EACKlG,EAAoBuH,EAAU,SACZ,iBAAhBrB,EACF7F,EAAmBkH,EAAU,cAD/B,QCNAC,EAXW,SAACT,GAQzB,MAAO,CAAEU,qBAPoB,SAACP,GACD,YAAvBA,EAAMC,OAAOC,MACfL,EAAS,aACuB,aAAvBG,EAAMC,OAAOC,OACtBL,EAAS,gBC0DAW,EAhDE,WAAO,IAAD,EACK/K,mBAAS,IADd,mBACd6J,EADc,KACPmB,EADO,OAE2BhL,mBAAS,aAFpC,mBAEdiL,EAFc,KAEIC,EAFJ,OAGKlL,mBAAS,IAHd,mBAGd0J,EAHc,KAGPyB,EAHO,OAKgB5E,IAA7B7F,EALa,EAKbA,KAAMqG,EALO,EAKPA,UAAWD,EALJ,EAKIA,QALJ,EAMsBoD,EAAeL,EAAOmB,GAAzDV,EANa,EAMbA,kBAAmBf,EANN,EAMMA,YACnBoB,EAAqBD,EAAa,OAAChK,QAAD,IAACA,OAAD,EAACA,EAAMiG,UAAWqE,EAAUzB,EAAa,YAA3EoB,iBACAG,EAAyBD,EAAkBK,GAA3CJ,qBAUR,OARA3K,qBAAU,WACR6K,EAAStH,EAAkB,OAAChD,QAAD,IAACA,OAAD,EAACA,EAAMiG,UAAW,UAC7CwE,GAAS,WACP,IAAMC,EAAgB,IAAIC,IAAJ,OAAQ3K,QAAR,IAAQA,OAAR,EAAQA,EAAMiG,UAAUuC,KAAI,SAAChG,GAAD,OAASA,EAAIC,aAAa0C,aAC5E,MAAM,CAAE,OAAR,mBAAkBuF,SAEnB,CAAC1K,IAEAqG,EAEA,uBAAMvH,UAAU,iBAAhB,eACI,cAAC,EAAD,CAAWA,UAAW,aAAc0G,KAAM,kBAK9CY,EAEA,sBAAMtH,UAAU,iBAAhB,SACE,cAAC,EAAD,CAAWA,UAAW,aAAc0G,KAAM,mCAM9C,uBAAM1G,UAAU,iBAAhB,UACE,cAAC,EAAD,CACEgK,SAAU,WACVD,YAAae,EACbb,WAAYkB,EACZhB,eAAgBmB,EAChBpB,MAAOA,IAET,cAAC,EAAD,CAAeG,MAAOA,EAAOE,SAAUkB,QC9B9BK,G,MA1BY,SAACnB,EAAOC,EAAUb,GAuB3C,MAAO,CAAEgC,sBAtBqB,SAAChB,GACF,QAAvBA,EAAMC,OAAOC,MACfL,GAAS,WACP,MAAoB,kBAAhBb,EACKlG,EAAoB8G,EAAO,SACT,iBAAhBZ,EACF7F,EAAmByG,EAAO,cAD5B,KAKTC,GAAS,WACP,IAAMQ,EAAWT,EAAMlH,QAAO,SAACC,GAAD,OAASA,EAAIsI,QAAUjB,EAAMC,OAAOC,SAElE,MAAoB,kBAAhBlB,EACKlG,EAAoBuH,EAAU,SACZ,iBAAhBrB,EACF7F,EAAmBkH,EAAU,cAD/B,SC+CAa,EAlDU,WAAO,IAAD,EACHzL,mBAAS,IADN,mBACtB6J,EADsB,KACfmB,EADe,OAEmBhL,mBAAS,aAF5B,mBAEtBiL,EAFsB,KAEJC,EAFI,OAGHlL,mBAAS,IAHN,mBAGtB0J,EAHsB,KAGfyB,EAHe,OAKQnE,IAA7BtG,EALqB,EAKrBA,KAAMqG,EALe,EAKfA,UAAWD,EALI,EAKJA,QACjBgE,EAAyBD,EAAkBK,GAA3CJ,qBANqB,EAOcZ,EAAeL,EAAOmB,GAAzDV,EAPqB,EAOrBA,kBAAmBf,EAPE,EAOFA,YACnBgC,EAA0BD,EAAkB,OAAC5K,QAAD,IAACA,OAAD,EAACA,EAAMiG,UAAWqE,EAAUzB,GAAxEgC,sBAUR,OARApL,qBAAU,WACR6K,EAAStH,EAAkB,OAAChD,QAAD,IAACA,OAAD,EAACA,EAAMiG,UAAW,UAC7CwE,GAAS,WACP,IAAMO,EAAa,IAAIL,IAAJ,OAAQ3K,QAAR,IAAQA,OAAR,EAAQA,EAAMiG,UAAUuC,KAAI,SAAChG,GAAD,OAASA,EAAIsI,UAC5D,MAAM,CAAE,OAAR,mBAAkBE,SAEnB,CAAChL,IAEAqG,EAEA,uBAAMvH,UAAU,iBAAhB,eACI,cAAC,EAAD,CAAWA,UAAW,aAAc0G,KAAM,kBAK9CY,EAEA,sBAAMtH,UAAU,iBAAhB,SACE,cAAC,EAAD,CAAWA,UAAW,aAAc0G,KAAM,mCAM9C,uBAAM1G,UAAU,iBAAhB,UACE,yBAASA,UAAU,OAAnB,SACE,cAAC,EAAD,CACEgK,SAAU,QACVD,YAAae,EACbb,WAAY8B,EACZ5B,eAAgBmB,EAChBpB,MAAOA,MAGX,cAAC,EAAD,CAAeG,MAAOA,EAAOE,SAAUkB,QCK9BU,G,MAlDE,WAAO,IAAD,EACK3L,mBAAS,IADd,mBACd6J,EADc,KACPmB,EADO,OAE2BhL,mBAAS,aAFpC,mBAEdiL,EAFc,KAEIC,EAFJ,OAGKlL,mBAAS,IAHd,mBAGd0J,EAHc,KAGPyB,EAHO,OAKgB7D,IAA7B5G,EALa,EAKbA,KAAMqG,EALO,EAKPA,UAAWD,EALJ,EAKIA,QACjBgE,EAAyBD,EAAkBK,GAA3CJ,qBANa,EAOsBZ,EAAeL,EAAOmB,GAAzDV,EAPa,EAObA,kBAAmBf,EAPN,EAOMA,YACnBoB,EAAqBD,EAAa,OAAChK,QAAD,IAACA,OAAD,EAACA,EAAMiG,UAAWqE,EAAUzB,EAAa,UAA3EoB,iBAUR,OARAxK,qBAAU,WACR6K,EAAStH,EAAkB,OAAChD,QAAD,IAACA,OAAD,EAACA,EAAMiG,UAAW,UAC7CwE,GAAS,WACP,IAAMS,EAAc,IAAIP,IAAJ,OAAQ3K,QAAR,IAAQA,OAAR,EAAQA,EAAMiG,UAAUuC,KAAI,SAAChG,GAAD,OAASA,EAAIC,aAAa0I,WAC1E,MAAM,CAAE,OAAR,mBAAkBD,SAEnB,CAAClL,IAEAqG,EAEA,uBAAMvH,UAAU,iBAAhB,eACI,cAAC,EAAD,CAAWA,UAAW,aAAc0G,KAAM,kBAK9CY,EAEA,sBAAMtH,UAAU,iBAAhB,SACE,cAAC,EAAD,CAAWA,UAAW,aAAc0G,KAAM,mCAM9C,uBAAM1G,UAAU,iBAAhB,UACE,yBAASA,UAAU,OAAnB,SACE,cAAC,EAAD,CACEgK,SAAU,SACVD,YAAae,EACbb,WAAYkB,EACZhB,eAAgBmB,EAChBpB,MAAOA,MAGX,cAAC,EAAD,CAAeG,MAAOA,EAAOE,SAAUkB,SC7CvCa,I,MAAc,IAAIC,KAiCTC,GA/BH,WAAO,IAAD,EAC8BnI,IAAtCC,EADQ,EACRA,UAAWG,EADH,EACGA,UAAWK,EADd,EACcA,YADd,EAEkCxD,IAA1CC,EAFQ,EAERA,KAAME,EAFE,EAEFA,YAAaI,EAFX,EAEWA,mBAE3B,OACE,0BAAS7B,UAAU,MAAnB,UACE,cAAC,EAAD,CACEA,UAAU,SACVqG,SAAU9E,EACV+E,MAAO7E,EACPrB,IAAKyB,EACL0E,KAAI,UAAKjC,EAAL,YAAkBG,GACtB+B,KAAM1B,IAER,yBAAS9E,UAAU,OAAnB,SACE,cAACyM,EAAA,EAAD,CAAqBC,OAAQJ,GAA7B,SACE,eAAC,IAAD,WACE,cAAC,EAAD,CAAKtM,UAAU,QACf,eAAC,IAAD,WACE,cAAC,IAAD,CAAO2M,OAAK,EAACC,KAAK,IAAIC,UAAW9E,IACjC,cAAC,IAAD,CAAO6E,KAAK,QAAQC,UAAWtB,IAC/B,cAAC,IAAD,CAAOqB,KAAK,iBAAiBC,UAAWZ,IACxC,cAAC,IAAD,CAAOW,KAAK,QAAQC,UAAWV,kBC3B9BW,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.841a8a03.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pause-button.7c376cc9.svg\";","import PropTypes from 'prop-types';\n\nimport pauseButtonSvg from '../../assets/pause-button.svg';\n\nimport './pause-button.css';\n\nconst PauseButton = (props) => {\n  return (\n    <button className=\"pause-button\" onClick={props.onClick}>\n      <img src={pauseButtonSvg} alt=\"pause-button\" />\n    </button>\n  );\n};\n\nPauseButton.propTypes = {\n  onClick: PropTypes.func,\n};\n\nexport default PauseButton;\n","export default __webpack_public_path__ + \"static/media/play-button.76431e02.svg\";","import PropTypes from 'prop-types';\n\nimport playButtonSvg from '../../assets/play-button.svg';\n\nimport './play-button.css';\n\nconst PlayButton = (props) => {\n  return (\n    <button className=\"play-button\" onClick={props.onClick}>\n      <img src={playButtonSvg} alt=\"play-button\" />\n    </button>\n  );\n};\n\nPlayButton.propTypes = {\n  onClick: PropTypes.func,\n};\n\nexport default PlayButton;\n","import axios from 'axios';\nimport { useEffect, useState } from 'react';\n\nconst useFetchAudio = () => {\n  const [audioList, setAudioList] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const apiCallResponse = await axios.get('https://acnhapi.com/v1/backgroundmusic/');\n        setAudioList(Object.values(apiCallResponse.data));\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  return {\n    audioList,\n  };\n};\n\nexport default useFetchAudio;\n","import axios from 'axios';\nimport { useState, useEffect } from 'react';\n\nconst useFetchWeatherData = () => {\n  const [city, setCity] = useState('');\n  const [weatherIcon, setWeatherIcon] = useState('');\n  const [weatherID, setWeatherID] = useState(0);\n  const [weatherDescription, setWeatherDescription] = useState('');\n\n  useEffect(() => {\n    const fetchWeatherData = () => {\n      try {\n        navigator.geolocation.getCurrentPosition(async (position) => {\n          const latitude = position.coords.latitude;\n          const longitude = position.coords.longitude;\n          const apiCallResponse = await axios.get(\n            `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${process.env.REACT_APP_WEATHER_API_KEY}`,\n          );\n          const weatherData = apiCallResponse.data;\n          setWeatherID(weatherData.weather[0].id);\n          setCity(weatherData.name);\n          setWeatherIcon(`https://openweathermap.org/img/wn/${weatherData.weather[0].icon}@2x.png`);\n          setWeatherDescription(weatherData.weather[0].description);\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchWeatherData();\n  }, []);\n\n  return { city, weatherIcon, weatherID, weatherDescription };\n};\n\nexport default useFetchWeatherData;\n","export const getDayNumber = () => {\n  const date = new Date();\n  return date.toLocaleDateString('default', { day: '2-digit' });\n};\n\nexport const getMonthName = () => {\n  const date = new Date();\n  return date.toLocaleString('default', { month: 'long' });\n};\n\nexport const getMonthNumber = () => {\n  const date = new Date();\n  return date.getMonth() + 1;\n};\n\nexport const getTime = () => {\n  return new Date().toLocaleTimeString([], {\n    hour: '2-digit',\n    minute: '2-digit',\n    hour12: false,\n  });\n};\n\nexport const getDailyAcnhResults = (data) => {\n  const results = Object.values(data);\n  const monthNumber = getMonthNumber();\n  return results?.filter((obj) => obj.availability['month-array-northern'].includes(monthNumber));\n};\n\nexport const sortDescendingOrder = (array, type) => {\n  if (array) {\n    return [...array].sort((a, b) => b[type] - a[type]);\n  }\n};\n\nexport const sortAscendingOrder = (array, type) => {\n  if (array) {\n    return [...array].sort((a, b) => a[type] - b[type]);\n  }\n};\n\nexport const findTotalCreatures = (data) => {\n  if (data) {\n    return Object.values(data).length;\n  }\n};\n","import { useEffect, useState } from 'react';\n\nimport * as utils from '../utils';\n\nconst useGetDateAndTime = () => {\n  const dayNumber = utils.getDayNumber();\n  const monthName = utils.getMonthName();\n  const timeAtLoad = utils.getTime();\n  const [currentTime, setCurrentTime] = useState(timeAtLoad);\n\n  useEffect(() => {\n    const intervalID = setInterval(() => {\n      setCurrentTime(utils.getTime());\n    }, 1000);\n    return () => {\n      clearInterval(intervalID);\n    };\n  }, []);\n\n  return { dayNumber, monthName, currentTime };\n};\n\nexport default useGetDateAndTime;\n","import { useState, useEffect } from 'react';\n\nimport PauseButton from '../../components/PauseButton/PauseButton';\nimport PlayButton from '../../components/PlayButton/PlayButton';\n\nimport './music-player.css';\n\nimport useFetchAudio from '../../hooks/useFetchAudio';\nimport useFetchWeatherData from '../../hooks/useFetchWeatherData';\nimport useGetDateAndTime from '../../hooks/useGetDateAndTime';\n\nconst MusicPlayer = () => {\n  const { audioList } = useFetchAudio();\n  const { currentTime } = useGetDateAndTime();\n  const { weatherID } = useFetchWeatherData();\n\n  const [audio, setAudio] = useState(null);\n  const [hourlyID, setHourlyID] = useState(currentTime.slice(0, 2));\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  // change audio every hour\n  const date = new Date();\n  const minutes = date.getMinutes();\n  useEffect(() => {\n    if (minutes === 0) {\n      setHourlyID(currentTime.slice(0, 2));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [minutes]);\n\n  // change audio every minute\n  // const date = new Date();\n  // const seconds = date.getSeconds();\n  // useEffect(() => {\n  //   if (seconds === 0) {\n  //     setHourlyID(currentTime.slice(3, 5));\n  //   }\n  // }, [seconds]);\n\n  useEffect(() => {\n    if (weatherID >= 800 && weatherID <= 899) {\n      const currentAudio = audioList?.filter(\n        (obj) => obj['file-name'] === `BGM_24Hour_${hourlyID}_Sunny`,\n      );\n      if (currentAudio) {\n        const audioUrl = currentAudio[0]['music_uri'];\n        setAudio(new Audio(audioUrl));\n      }\n    } else if (weatherID >= 600 && weatherID <= 699) {\n      const currentAudio = audioList?.filter(\n        (obj) => obj['file-name'] === `BGM_24Hour_${hourlyID}_Snowy`,\n      );\n      if (currentAudio) {\n        const audioUrl = currentAudio[0]['music_uri'];\n        setAudio(new Audio(audioUrl));\n      }\n    } else if (weatherID >= 200 && weatherID <= 599) {\n      const currentAudio = audioList?.filter(\n        (obj) => obj['file-name'] === `BGM_24Hour_${hourlyID}_Rainy`,\n      );\n      if (currentAudio) {\n        const audioUrl = currentAudio[0]['music_uri'];\n        setAudio(new Audio(audioUrl));\n      }\n    }\n  }, [audioList, hourlyID, weatherID]);\n\n  useEffect(() => {\n    if (isPlaying && audio) {\n      audio?.play();\n      audio.loop = true;\n    } else if (!isPlaying) {\n      audio?.pause();\n    }\n    return () => {\n      audio?.pause();\n    };\n  }, [isPlaying, audio]);\n\n  const toggle = () => {\n    if (isPlaying) {\n      setIsPlaying(false);\n    } else if (!isPlaying) {\n      setIsPlaying(true);\n    }\n  };\n\n  return (\n    <section className=\"music-player\">\n      {isPlaying ? <PauseButton onClick={toggle} /> : <PlayButton onClick={toggle} />}\n    </section>\n  );\n};\n\nexport default MusicPlayer;\n","import PropTypes from 'prop-types';\n\nimport MusicPlayer from '../MusicPlayer/MusicPlayer';\n\nimport './header.css';\n\nconst Header = (props) => {\n  return (\n    <header className={`header ${props.className}`}>\n      <h2 className=\"header-text\">Animal Crossing Daily Report</h2>\n      <section className=\"sub-header\">\n        <h4>{props.location}</h4>\n        <img className=\"weather-icon\" src={props.image} alt={props.alt} /> <h4>{props.date}</h4>\n        <h4>{props.time}</h4>\n        <MusicPlayer />\n      </section>\n    </header>\n  );\n};\n\nHeader.propTypes = {\n  alt: PropTypes.string,\n  className: PropTypes.string,\n  date: PropTypes.string,\n  image: PropTypes.string,\n  location: PropTypes.string,\n  time: PropTypes.string,\n};\n\nexport default Header;\n","import PropTypes from 'prop-types';\n\nimport './text-block.css';\n\nconst TextBlock = (props) => {\n  return <h4 className={`text-block ${props.className}`}>{props.text}</h4>;\n};\n\nTextBlock.propTypes = {\n  className: PropTypes.string,\n  text: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nexport default TextBlock;\n","import PropTypes from 'prop-types';\n\nimport './item-card.css';\n\nconst ItemCard = (props) => {\n  return (\n    <figure className={`item-card ${props.className}`}>\n      <img className=\"item-card-image\" src={props.image} alt={props.alt} />\n      <figcaption className=\"item-card-caption1\">{props.caption1}</figcaption>\n      <figcaption className=\"item-card-caption2\">\n        {props.moneyIcon}\n        {props.caption2}\n      </figcaption>\n    </figure>\n  );\n};\n\nItemCard.propTypes = {\n  alt: PropTypes.string,\n  caption1: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  caption2: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  className: PropTypes.string,\n  image: PropTypes.string,\n  moneyIcon: PropTypes.object,\n};\n\nexport default ItemCard;\n","import axios from 'axios';\nimport { useQuery } from 'react-query';\n\nimport { getDailyAcnhResults } from '../utils';\n\nconst useQueryFish = () => {\n  const { data, isError, isLoading } = useQuery(\n    'fish',\n    async () => {\n      const apiCallResponse = await axios.get('https://acnhapi.com/v1/fish/');\n      const manipulatedData = {\n        ...apiCallResponse,\n        data: {\n          completeData: apiCallResponse.data,\n          dailyData: getDailyAcnhResults(apiCallResponse.data),\n        },\n      };\n      return manipulatedData;\n    },\n    { refetchOnMount: false, refetchOnWindowFocus: false },\n  );\n  return {\n    data: data?.data,\n    isError: isError,\n    isLoading: isLoading,\n  };\n};\n\nexport default useQueryFish;\n","import axios from 'axios';\nimport { useQuery } from 'react-query';\n\nimport { getDailyAcnhResults } from '../utils';\n\nconst useQuerySeaCreatures = () => {\n  const { data, isError, isLoading } = useQuery(\n    'sea creatures',\n    async () => {\n      const apiCallResponse = await axios.get('https://acnhapi.com/v1/sea/');\n      const manipulatedData = {\n        ...apiCallResponse,\n        data: {\n          completeData: apiCallResponse.data,\n          dailyData: getDailyAcnhResults(apiCallResponse.data),\n        },\n      };\n      return manipulatedData;\n    },\n    { refetchOnMount: false, refetchOnWindowFocus: false },\n  );\n  return {\n    data: data?.data,\n    isError: isError,\n    isLoading: isLoading,\n  };\n};\n\nexport default useQuerySeaCreatures;\n","import axios from 'axios';\nimport { useQuery } from 'react-query';\n\nimport { getDailyAcnhResults } from '../utils';\n\nconst useQueryData = () => {\n  const { data, isError, isLoading } = useQuery(\n    'bugs',\n    async () => {\n      const apiCallResponse = await axios.get('https://acnhapi.com/v1/bugs/');\n      const manipulatedData = {\n        ...apiCallResponse,\n        data: {\n          completeData: apiCallResponse.data,\n          dailyData: getDailyAcnhResults(apiCallResponse.data),\n        },\n      };\n      return manipulatedData;\n    },\n    { refetchOnMount: false, refetchOnWindowFocus: false },\n  );\n  return {\n    data: data?.data,\n    isError,\n    isLoading,\n  };\n};\n\nexport default useQueryData;\n","import useQueryFish from './useQueryFish';\nimport useQuerySeaCreatures from './useQuerySeaCreatures';\nimport useQueryBugs from './useQueryBugs';\n\nconst useQueryAllCreatures = () => {\n  const fishData = useQueryFish();\n  const seaCreaturesData = useQuerySeaCreatures();\n  const bugsData = useQueryBugs();\n\n  return {\n    fishData,\n    bugsData,\n    seaCreaturesData,\n  };\n};\n\nexport default useQueryAllCreatures;\n","import { useState, useEffect } from 'react';\n\nimport TextBlock from '../../components/TextBlock/TextBlock';\nimport ItemCard from '../../components/ItemCard/ItemCard';\n\nimport { findTotalCreatures } from '../../utils';\n\nimport './home-page.css';\n\nimport useQueryAllCreatures from '../../hooks/useQueryAllCreatures';\n\nconst HomePage = (props) => {\n  const [fishIcon, setFishIcon] = useState('');\n  const [numberOfFishAvailable, setNumberOfFishAvailable] = useState(0);\n  const [totalFish, setTotalFish] = useState(0);\n\n  const [seaCreatureIcon, setSeaCreatureIcon] = useState('');\n  const [numberOfSeaCreaturesAvailable, setNumberOfSeaCreaturesAvailable] = useState(0);\n  const [totalSeaCreatures, setTotalSeaCreatures] = useState(0);\n\n  const [bugIcon, setBugIcon] = useState('');\n  const [numberOfBugsAvailable, setNumberOfBugsAvailable] = useState(0);\n  const [totalBugs, setTotalBugs] = useState(0);\n\n  const { fishData, seaCreaturesData, bugsData } = useQueryAllCreatures();\n\n  useEffect(() => {\n    setFishIcon(fishData.data?.dailyData[0].icon_uri);\n    setNumberOfFishAvailable(fishData.data?.dailyData.length);\n    setTotalFish(findTotalCreatures(fishData.data?.completeData));\n\n    setSeaCreatureIcon(seaCreaturesData.data?.dailyData[0].icon_uri);\n    setNumberOfSeaCreaturesAvailable(seaCreaturesData.data?.dailyData.length);\n    setTotalSeaCreatures(findTotalCreatures(seaCreaturesData.data?.completeData));\n\n    setBugIcon(bugsData.data?.dailyData[0].icon_uri);\n    setNumberOfBugsAvailable(bugsData.data?.dailyData.length);\n    setTotalBugs(findTotalCreatures(bugsData.data?.completeData));\n  }, [fishData, seaCreaturesData, bugsData]);\n\n  if (fishData.isLoading || seaCreaturesData.isLoading || bugsData.isLoading) {\n    return (\n      <main className={`home-page ${props.className}`}>\n        <TextBlock className={'text-block'} text={'Loading...'} />\n      </main>\n    );\n  }\n\n  if (fishData.isError || seaCreaturesData.isError || bugsData.isError) {\n    return (\n      <main className={`home-page ${props.className}`}>\n        <TextBlock className={'text-block'} text={'Sorry...something went wrong'} />\n      </main>\n    );\n  }\n\n  return (\n    <main className={`home-page ${props.className}`}>\n      <TextBlock className={'text-block'} text={'Available Today'} />\n      <section className={'item-cards'}>\n        <ItemCard\n          caption1={'fish'}\n          caption2={`${numberOfFishAvailable} out of ${totalFish}`}\n          image={fishIcon}\n        />\n        <ItemCard\n          caption1={'sea creatures'}\n          caption2={`${numberOfSeaCreaturesAvailable} out of ${totalSeaCreatures}`}\n          image={seaCreatureIcon}\n        />\n        <ItemCard\n          caption1={'bugs'}\n          caption2={`${numberOfBugsAvailable} out of ${totalBugs}`}\n          image={bugIcon}\n        />\n      </section>\n    </main>\n  );\n};\n\nexport default HomePage;\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport './nav.css';\n\nconst Nav = (props) => {\n  const location = useLocation();\n  const pathname = location.pathname;\n\n  return (\n    <nav className={`nav ${props.className}`}>\n      <Link to=\"/\" className={`link ${pathname === '/' && 'active'}`}>\n        Home\n      </Link>\n      <Link to=\"/fish\" className={`link ${pathname === '/fish' && 'active'}`}>\n        Fish\n      </Link>\n      <Link to=\"/sea-creatures\" className={`link ${pathname === '/sea-creatures' && 'active'}`}>\n        Sea Creatures\n      </Link>\n      <Link to=\"/bugs\" className={`link ${pathname === '/bugs' && 'active'}`}>\n        Bugs\n      </Link>\n    </nav>\n  );\n};\n\nNav.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default Nav;\n","import PropTypes from 'prop-types';\n\nimport './drop-down-button.css';\n\nconst DropdownButton = (props) => {\n  const options = props.options;\n  const listOptions = options.map((option) => <option key={option}>{option}</option>);\n\n  return (\n    <section className={`drop-down ${props.className}`}>\n      <label>{props.label}: </label>\n      <select name={props.label} id={props.label} onChange={props.onChange}>\n        {listOptions}\n      </select>\n    </section>\n  );\n};\n\nDropdownButton.propTypes = {\n  className: PropTypes.string,\n  label: PropTypes.string,\n  onChange: PropTypes.func,\n  options: PropTypes.array,\n};\n\nexport default DropdownButton;\n","import PropTypes from 'prop-types';\nimport DropdownButton from '../../components/DropdownButton/DropdownButton';\n\nimport './filter-menu.css';\n\nconst FilterMenu = (props) => {\n  return (\n    <section className=\"filter-menu\">\n      <DropdownButton\n        label={'Sort by'}\n        onChange={props.sortByPrice}\n        options={['Lowest price', 'Highest price']}\n      />\n      <DropdownButton label={props.category} onChange={props.sortByType} options={props.types} />\n      <DropdownButton\n        label={'Languages'}\n        onChange={props.selectLanguage}\n        options={['English', 'Japanese']}\n      />\n    </section>\n  );\n};\n\nFilterMenu.propTypes = {\n  category: PropTypes.string,\n  sortByPrice: PropTypes.func,\n  sortByType: PropTypes.func,\n  selectLanguage: PropTypes.func,\n  types: PropTypes.array,\n};\nexport default FilterMenu;\n","export default __webpack_public_path__ + \"static/media/money-bag-icon.7fcd0107.png\";","import PropTypes from 'prop-types';\n\nimport ItemCard from '../ItemCard/ItemCard';\nimport moneyBagIcon from '../../assets/money-bag-icon.png';\n\nimport './item-cards-grid.css';\n\nconst ItemCardsGrid = (props) => {\n  return (\n    <section className=\"item-cards-grid\">\n      {props.items?.map((item) => {\n        return (\n          <ItemCard\n            key={item['file-name']}\n            image={item.icon_uri}\n            alt={item.name[`${props.language}`]}\n            caption1={item.name[`${props.language}`]}\n            caption2={item.price}\n            moneyIcon={<img className=\"money-bag-icon\" src={moneyBagIcon} alt={'money bag'} />}\n          ></ItemCard>\n        );\n      })}\n    </section>\n  );\n};\nItemCardsGrid.propTypes = {\n  items: PropTypes.array,\n  language: PropTypes.string,\n};\n\nexport default ItemCardsGrid;\n","import { useState } from 'react';\n\nimport { sortAscendingOrder, sortDescendingOrder } from '../utils';\n\nconst useSortByPrice = (state, setState) => {\n  const [sortByPrice, setSortByPrice] = useState('Lowest price');\n\n  const handleSortByPrice = (event) => {\n    if (event.target.value === 'Highest price') {\n      setState(sortDescendingOrder(state, 'price'));\n      setSortByPrice(event.target.value);\n    } else if (event.target.value === 'Lowest price') {\n      setState(sortAscendingOrder(state, 'price'));\n      setSortByPrice(event.target.value);\n    }\n  };\n\n  return { handleSortByPrice, sortByPrice };\n};\n\nexport default useSortByPrice;\n","import { sortAscendingOrder, sortDescendingOrder } from '../utils';\n\nconst useSortByType = (state, setState, sortByPrice, type) => {\n  const handleSortByType = (event) => {\n    if (event.target.value === 'All') {\n      setState(() => {\n        if (sortByPrice === 'Highest price') {\n          return sortDescendingOrder(state, 'price');\n        } else if (sortByPrice === 'Lowest price') {\n          return sortAscendingOrder(state, 'price');\n        }\n      });\n    } else {\n      setState(() => {\n        const filtered = state?.filter((obj) => obj.availability[type] === event.target.value);\n        if (sortByPrice === 'Highest price') {\n          return sortDescendingOrder(filtered, 'price');\n        } else if (sortByPrice === 'Lowest price') {\n          return sortAscendingOrder(filtered, 'price');\n        }\n      });\n    }\n  };\n\n  return { handleSortByType };\n};\n\nexport default useSortByType;\n","const useSelectLanguage = (setState) => {\n  const handleSelectLanguage = (event) => {\n    if (event.target.value === 'English') {\n      setState('name-EUen');\n    } else if (event.target.value === 'Japanese') {\n      setState('name-JPja');\n    }\n  };\n  return { handleSelectLanguage };\n};\n\nexport default useSelectLanguage;\n","import { useState, useEffect } from 'react';\n\nimport FilterMenu from '../../components/FilterMenu/FilterMenu';\nimport ItemCardsGrid from '../../components/ItemCardsGrid/ItemCardsGrid';\nimport TextBlock from '../../components/TextBlock/TextBlock';\n\nimport { sortAscendingOrder } from '../../utils';\n\nimport './fish-page.css';\n\nimport useSortByPrice from '../../hooks/useSortByPrice';\nimport useSortByType from '../../hooks/useSortByType';\nimport useSelectLanguage from '../../hooks/useSelectLanguage';\nimport useQueryFish from '../../hooks/useQueryFish';\n\nconst FishPage = () => {\n  const [items, setItems] = useState([]);\n  const [selectedLanguage, setSelectedLanguage] = useState('name-EUen');\n  const [types, setTypes] = useState([]);\n\n  const { data, isLoading, isError } = useQueryFish();\n  const { handleSortByPrice, sortByPrice } = useSortByPrice(items, setItems);\n  const { handleSortByType } = useSortByType(data?.dailyData, setItems, sortByPrice, 'location');\n  const { handleSelectLanguage } = useSelectLanguage(setSelectedLanguage);\n\n  useEffect(() => {\n    setItems(sortAscendingOrder(data?.dailyData, 'price'));\n    setTypes(() => {\n      const locationTypes = new Set(data?.dailyData.map((obj) => obj.availability.location));\n      return ['All', ...locationTypes];\n    });\n  }, [data]);\n\n  if (isLoading) {\n    return (\n      <main className=\"page-container\">\n        ] <TextBlock className={'text-block'} text={'Loading...'} />\n      </main>\n    );\n  }\n\n  if (isError) {\n    return (\n      <main className=\"page-container\">\n        <TextBlock className={'text-block'} text={'Sorry...something went wrong'} />\n      </main>\n    );\n  }\n\n  return (\n    <main className=\"page-container\">\n      <FilterMenu\n        category={'Location'}\n        sortByPrice={handleSortByPrice}\n        sortByType={handleSortByType}\n        selectLanguage={handleSelectLanguage}\n        types={types}\n      />\n      <ItemCardsGrid items={items} language={selectedLanguage} />\n    </main>\n  );\n};\n\nexport default FishPage;\n","import { sortAscendingOrder, sortDescendingOrder } from '../utils';\n\nconst useSortBySpeedType = (state, setState, sortByPrice) => {\n  const handleSortBySpeedType = (event) => {\n    if (event.target.value === 'All') {\n      setState(() => {\n        if (sortByPrice === 'Highest price') {\n          return sortDescendingOrder(state, 'price');\n        } else if (sortByPrice === 'Lowest price') {\n          return sortAscendingOrder(state, 'price');\n        }\n      });\n    } else {\n      setState(() => {\n        const filtered = state.filter((obj) => obj.speed === event.target.value);\n\n        if (sortByPrice === 'Highest price') {\n          return sortDescendingOrder(filtered, 'price');\n        } else if (sortByPrice === 'Lowest price') {\n          return sortAscendingOrder(filtered, 'price');\n        }\n      });\n    }\n  };\n\n  return { handleSortBySpeedType };\n};\n\nexport default useSortBySpeedType;\n","import { useState, useEffect } from 'react';\n\nimport FilterMenu from '../../components/FilterMenu/FilterMenu';\nimport ItemCardsGrid from '../../components/ItemCardsGrid/ItemCardsGrid';\nimport TextBlock from '../../components/TextBlock/TextBlock';\n\nimport { sortAscendingOrder } from '../../utils';\n\nimport './sea-creatures-page.css';\n\nimport useSortByPrice from '../../hooks/useSortByPrice';\nimport useSortBySpeedType from '../../hooks/useSortBySpeedType';\nimport useSelectLanguage from '../../hooks/useSelectLanguage';\nimport useQuerySeaCreatures from '../../hooks/useQuerySeaCreatures';\n\nconst SeaCreaturesPage = () => {\n  const [items, setItems] = useState([]);\n  const [selectedLanguage, setSelectedLanguage] = useState('name-EUen');\n  const [types, setTypes] = useState([]);\n\n  const { data, isLoading, isError } = useQuerySeaCreatures();\n  const { handleSelectLanguage } = useSelectLanguage(setSelectedLanguage);\n  const { handleSortByPrice, sortByPrice } = useSortByPrice(items, setItems);\n  const { handleSortBySpeedType } = useSortBySpeedType(data?.dailyData, setItems, sortByPrice);\n\n  useEffect(() => {\n    setItems(sortAscendingOrder(data?.dailyData, 'price'));\n    setTypes(() => {\n      const speedTypes = new Set(data?.dailyData.map((obj) => obj.speed));\n      return ['All', ...speedTypes];\n    });\n  }, [data]);\n\n  if (isLoading) {\n    return (\n      <main className=\"page-container\">\n        ] <TextBlock className={'text-block'} text={'Loading...'} />\n      </main>\n    );\n  }\n\n  if (isError) {\n    return (\n      <main className=\"page-container\">\n        <TextBlock className={'text-block'} text={'Sorry...something went wrong'} />\n      </main>\n    );\n  }\n\n  return (\n    <main className=\"page-container\">\n      <section className=\"sort\">\n        <FilterMenu\n          category={'Speed'}\n          sortByPrice={handleSortByPrice}\n          sortByType={handleSortBySpeedType}\n          selectLanguage={handleSelectLanguage}\n          types={types}\n        />\n      </section>\n      <ItemCardsGrid items={items} language={selectedLanguage} />\n    </main>\n  );\n};\n\nexport default SeaCreaturesPage;\n","import { useState, useEffect } from 'react';\n\nimport FilterMenu from '../../components/FilterMenu/FilterMenu';\nimport ItemCardsGrid from '../../components/ItemCardsGrid/ItemCardsGrid';\nimport TextBlock from '../../components/TextBlock/TextBlock';\n\nimport { sortAscendingOrder } from '../../utils';\n\nimport './bugs-page.css';\n\nimport useSortByPrice from '../../hooks/useSortByPrice';\nimport useSortByType from '../../hooks/useSortByType';\nimport useSelectLanguage from '../../hooks/useSelectLanguage';\nimport useQueryBugs from '../../hooks/useQueryBugs';\n\nconst BugsPage = () => {\n  const [items, setItems] = useState([]);\n  const [selectedLanguage, setSelectedLanguage] = useState('name-EUen');\n  const [types, setTypes] = useState([]);\n\n  const { data, isLoading, isError } = useQueryBugs();\n  const { handleSelectLanguage } = useSelectLanguage(setSelectedLanguage);\n  const { handleSortByPrice, sortByPrice } = useSortByPrice(items, setItems);\n  const { handleSortByType } = useSortByType(data?.dailyData, setItems, sortByPrice, 'rarity');\n\n  useEffect(() => {\n    setItems(sortAscendingOrder(data?.dailyData, 'price'));\n    setTypes(() => {\n      const rarityTypes = new Set(data?.dailyData.map((obj) => obj.availability.rarity));\n      return ['All', ...rarityTypes];\n    });\n  }, [data]);\n\n  if (isLoading) {\n    return (\n      <main className=\"page-container\">\n        ] <TextBlock className={'text-block'} text={'Loading...'} />\n      </main>\n    );\n  }\n\n  if (isError) {\n    return (\n      <main className=\"page-container\">\n        <TextBlock className={'text-block'} text={'Sorry...something went wrong'} />\n      </main>\n    );\n  }\n\n  return (\n    <main className=\"page-container\">\n      <section className=\"sort\">\n        <FilterMenu\n          category={'Rarity'}\n          sortByPrice={handleSortByPrice}\n          sortByType={handleSortByType}\n          selectLanguage={handleSelectLanguage}\n          types={types}\n        />\n      </section>\n      <ItemCardsGrid items={items} language={selectedLanguage} />\n    </main>\n  );\n};\n\nexport default BugsPage;\n","import { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport { QueryClient, QueryClientProvider } from 'react-query';\n\nimport Header from '../Header/Header';\nimport HomePage from '../../pages/HomePage/HomePage';\nimport Nav from '../../components/Nav/Nav';\nimport FishPage from '../../pages/FishPage/FishPage';\nimport SeaCreaturesPage from '../../pages/SeaCreaturesPage/SeaCreaturesPage';\nimport BugsPage from '../../pages/BugsPage/BugsPage';\n\nimport './app.css';\n\nimport useGetDateAndTime from '../../hooks/useGetDateAndTime';\nimport useFetchWeatherData from '../../hooks/useFetchWeatherData';\n\nconst queryClient = new QueryClient();\n\nconst App = () => {\n  const { dayNumber, monthName, currentTime } = useGetDateAndTime();\n  const { city, weatherIcon, weatherDescription } = useFetchWeatherData();\n\n  return (\n    <section className=\"app\">\n      <Header\n        className=\"header\"\n        location={city}\n        image={weatherIcon}\n        alt={weatherDescription}\n        date={`${dayNumber} ${monthName}`}\n        time={currentTime}\n      />\n      <section className=\"tabs\">\n        <QueryClientProvider client={queryClient}>\n          <Router>\n            <Nav className=\"nav\" />\n            <Switch>\n              <Route exact path=\"/\" component={HomePage}></Route>\n              <Route path=\"/fish\" component={FishPage}></Route>\n              <Route path=\"/sea-creatures\" component={SeaCreaturesPage}></Route>\n              <Route path=\"/bugs\" component={BugsPage}></Route>\n            </Switch>\n          </Router>\n        </QueryClientProvider>\n      </section>\n    </section>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}